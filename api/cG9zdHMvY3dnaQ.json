{"title":"利用Cloudflare Workers 制作Google镜像站","date":"2020-05-01T14:11:00.000Z","date_formatted":{"ll":"2020年5月1日","L":"2020/05/01","MM-DD":"05-01"},"thumbnail":"https://cdn.jsdelivr.net/gh/idkzr/static@master/imgs/cwgi/cover.jpg","color":"#111","link":"posts/cwgi","comments":true,"tags":["Workers","web"],"categories":["瞎折腾"],"updated":"2020-05-01T14:11:00.000Z","content":"<p>今天在gayhub上面闲逛，发现了一个利用Cloudflare Workers 制作Google镜像站的方法。</p>\n<a id=\"more\"></a>\n<p>Cloudflare Workers是什么各位可以自行搜索，这里不做过多介绍。</p>\n<h2 id=\"新建-workers\">新建 Workers<a title=\"#新建-workers\" href=\"#新建-workers\"></a></h2>\n<h3 id=\"登陆cf之后点击-workers\">登陆cf之后点击 Workers<a title=\"#登陆cf之后点击-workers\" href=\"#登陆cf之后点击-workers\"></a></h3>\n<p><img src=\"https://cdn.jsdelivr.net/gh/idkzr/static@master/imgs/cwgi/xjcw.jpg\" alt=\"xjcw\" class=\"φcx\"></p>\n<h3 id=\"创建子域名\">创建子域名<a title=\"#创建子域名\" href=\"#创建子域名\"></a></h3>\n<p><img src=\"https://cdn.jsdelivr.net/gh/idkzr/static@master/imgs/cwgi/xjzym.jpg\" alt=\"xjzym\" class=\"φcx\"></p>\n<h3 id=\"点击创建-workers\">点击创建 Workers<a title=\"#点击创建-workers\" href=\"#点击创建-workers\"></a></h3>\n<p><img src=\"https://cdn.jsdelivr.net/gh/idkzr/static@master/imgs/cwgi/cjcw.jpg\" alt=\"cjcw\" class=\"φcx\"></p>\n<h2 id=\"部署代码\">部署代码<a title=\"#部署代码\" href=\"#部署代码\"></a></h2>\n<h3 id=\"编辑workers\">编辑Workers<a title=\"#编辑workers\" href=\"#编辑workers\"></a></h3>\n<p>将以下代码粘贴至代码框</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Website you intended to retrieve for users.</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> upstream = <span class=\"string\">&#x27;www.google.com&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Custom pathname for the upstream website.</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> upstream_path = <span class=\"string\">&#x27;/&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Website you intended to retrieve for users using mobile devices.</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> upstream_mobile = <span class=\"string\">&#x27;www.google.com&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Countries and regions where you wish to suspend your service.</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> blocked_region = [<span class=\"string\">&#x27;KP&#x27;</span>, <span class=\"string\">&#x27;SY&#x27;</span>, <span class=\"string\">&#x27;PK&#x27;</span>, <span class=\"string\">&#x27;CU&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// IP addresses which you wish to block from using your service.</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> blocked_ip_address = [<span class=\"string\">&#x27;0.0.0.0&#x27;</span>, <span class=\"string\">&#x27;127.0.0.1&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Whether to use HTTPS protocol for upstream address.</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> https = <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Whether to disable cache.</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> disable_cache = <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Replace texts.</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> replace_dict = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;$upstream&#x27;</span>: <span class=\"string\">&#x27;$custom_domain&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;//google.com&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">addEventListener(<span class=\"string\">&#x27;fetch&#x27;</span>, <span class=\"function\"><span class=\"params\">event</span> =&gt;</span> &#123;</span><br><span class=\"line\">    event.respondWith(fetchAndApply(event.request));</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fetchAndApply</span>(<span class=\"params\">request</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> region = request.headers.get(<span class=\"string\">&#x27;cf-ipcountry&#x27;</span>).toUpperCase();</span><br><span class=\"line\">    <span class=\"keyword\">const</span> ip_address = request.headers.get(<span class=\"string\">&#x27;cf-connecting-ip&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> user_agent = request.headers.get(<span class=\"string\">&#x27;user-agent&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> response = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> url = <span class=\"keyword\">new</span> URL(request.url);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> url_hostname = url.hostname;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (https == <span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">        url.protocol = <span class=\"string\">&#x27;https:&#x27;</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        url.protocol = <span class=\"string\">&#x27;http:&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">await</span> device_status(user_agent)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> upstream_domain = upstream;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> upstream_domain = upstream_mobile;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    url.host = upstream_domain;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (url.pathname == <span class=\"string\">&#x27;/&#x27;</span>) &#123;</span><br><span class=\"line\">        url.pathname = upstream_path;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        url.pathname = upstream_path + url.pathname;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (blocked_region.includes(region)) &#123;</span><br><span class=\"line\">        response = <span class=\"keyword\">new</span> Response(<span class=\"string\">&#x27;Access denied: WorkersProxy is not available in your region yet.&#x27;</span>, &#123;</span><br><span class=\"line\">            status: <span class=\"number\">403</span></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (blocked_ip_address.includes(ip_address)) &#123;</span><br><span class=\"line\">        response = <span class=\"keyword\">new</span> Response(<span class=\"string\">&#x27;Access denied: Your IP address is blocked by WorkersProxy.&#x27;</span>, &#123;</span><br><span class=\"line\">            status: <span class=\"number\">403</span></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> method = request.method;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> request_headers = request.headers;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> new_request_headers = <span class=\"keyword\">new</span> Headers(request_headers);</span><br><span class=\"line\"></span><br><span class=\"line\">        new_request_headers.set(<span class=\"string\">&#x27;Host&#x27;</span>, url.hostname);</span><br><span class=\"line\">        new_request_headers.set(<span class=\"string\">&#x27;Referer&#x27;</span>, url.hostname);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">let</span> original_response = <span class=\"keyword\">await</span> fetch(url.href, &#123;</span><br><span class=\"line\">            method: method,</span><br><span class=\"line\">            headers: new_request_headers</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">let</span> original_response_clone = original_response.clone();</span><br><span class=\"line\">        <span class=\"keyword\">let</span> original_text = <span class=\"literal\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> response_headers = original_response.headers;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> new_response_headers = <span class=\"keyword\">new</span> Headers(response_headers);</span><br><span class=\"line\">        <span class=\"keyword\">let</span> status = original_response.status;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (disable_cache) &#123;</span><br><span class=\"line\">            new_response_headers.set(<span class=\"string\">&#x27;Cache-Control&#x27;</span>, <span class=\"string\">&#x27;no-store&#x27;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        new_response_headers.set(<span class=\"string\">&#x27;access-control-allow-origin&#x27;</span>, <span class=\"string\">&#x27;*&#x27;</span>);</span><br><span class=\"line\">        new_response_headers.set(<span class=\"string\">&#x27;access-control-allow-credentials&#x27;</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">        new_response_headers.delete(<span class=\"string\">&#x27;content-security-policy&#x27;</span>);</span><br><span class=\"line\">        new_response_headers.delete(<span class=\"string\">&#x27;content-security-policy-report-only&#x27;</span>);</span><br><span class=\"line\">        new_response_headers.delete(<span class=\"string\">&#x27;clear-site-data&#x27;</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(new_response_headers.get(<span class=\"string\">&quot;x-pjax-url&quot;</span>)) &#123;</span><br><span class=\"line\">            new_response_headers.set(<span class=\"string\">&quot;x-pjax-url&quot;</span>, response_headers.get(<span class=\"string\">&quot;x-pjax-url&quot;</span>).replace(<span class=\"string\">&quot;//&quot;</span> + upstream_domain, <span class=\"string\">&quot;//&quot;</span> + url_hostname));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">const</span> content_type = new_response_headers.get(<span class=\"string\">&#x27;content-type&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (content_type.includes(<span class=\"string\">&#x27;text/html&#x27;</span>) &amp;&amp; content_type.includes(<span class=\"string\">&#x27;UTF-8&#x27;</span>)) &#123;</span><br><span class=\"line\">            original_text = <span class=\"keyword\">await</span> replace_response_text(original_response_clone, upstream_domain, url_hostname);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            original_text = original_response_clone.body</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        response = <span class=\"keyword\">new</span> Response(original_text, &#123;</span><br><span class=\"line\">            status,</span><br><span class=\"line\">            headers: new_response_headers</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> response;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">replace_response_text</span>(<span class=\"params\">response, upstream_domain, host_name</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> text = <span class=\"keyword\">await</span> response.text()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> i, j;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i <span class=\"keyword\">in</span> replace_dict) &#123;</span><br><span class=\"line\">        j = replace_dict[i]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i == <span class=\"string\">&#x27;$upstream&#x27;</span>) &#123;</span><br><span class=\"line\">            i = upstream_domain</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (i == <span class=\"string\">&#x27;$custom_domain&#x27;</span>) &#123;</span><br><span class=\"line\">            i = host_name</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (j == <span class=\"string\">&#x27;$upstream&#x27;</span>) &#123;</span><br><span class=\"line\">            j = upstream_domain</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (j == <span class=\"string\">&#x27;$custom_domain&#x27;</span>) &#123;</span><br><span class=\"line\">            j = host_name</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">let</span> re = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(i, <span class=\"string\">&#x27;g&#x27;</span>)</span><br><span class=\"line\">        text = text.replace(re, j);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> text;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">device_status</span>(<span class=\"params\">user_agent_info</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> agents = [<span class=\"string\">&quot;Android&quot;</span>, <span class=\"string\">&quot;iPhone&quot;</span>, <span class=\"string\">&quot;SymbianOS&quot;</span>, <span class=\"string\">&quot;Windows Phone&quot;</span>, <span class=\"string\">&quot;iPad&quot;</span>, <span class=\"string\">&quot;iPod&quot;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">var</span> flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> v = <span class=\"number\">0</span>; v &lt; agents.length; v++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (user_agent_info.indexOf(agents[v]) &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            flag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> flag;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>点击左上角修改项目名（可选）<br>\n点击右下角保存并部署</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/idkzr/static@master/imgs/cwgi/xgdm.jpg\" alt=\"xgdm\" class=\"φcx\"></p>\n<p>确认部署</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/idkzr/static@master/imgs/cwgi/bs.jpg\" alt=\"bs\" class=\"φcx\"></p>\n<p>点击预览查看</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/idkzr/static@master/imgs/cwgi/yl.jpg\" alt=\"yl\" class=\"φcx\"></p>\n<h2 id=\"绑定域名\">绑定域名<a title=\"#绑定域名\" href=\"#绑定域名\"></a></h2>\n<h3 id=\"添加路由\">添加路由<a title=\"#添加路由\" href=\"#添加路由\"></a></h3>\n<p>回到域名管理，选择你的域名</p>\n<p>点击Workers，点击添加路由</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/idkzr/static@master/imgs/cwgi/ly.jpg\" alt=\"ly\" class=\"φcx\"></p>\n<p>路由填写你需要解析的域名，Workers选择刚刚新建的Workers项目名<br>\n我这里以<code>gogoogle.ml</code>举例，注意在域名后面填写<code>/*</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/idkzr/static@master/imgs/cwgi/qr.jpg\" alt=\"qr\" class=\"φcx\"></p>\n<h3 id=\"添加解析\">添加解析<a title=\"#添加解析\" href=\"#添加解析\"></a></h3>\n<p>这个是可以随便填写的，无论你写的什么，cf都会绑定到Workers上面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/idkzr/static@master/imgs/cwgi/jx.jpg\" alt=\"jx\" class=\"φcx\"></p>\n<h2 id=\"预览\">预览<a title=\"#预览\" href=\"#预览\"></a></h2>\n<p>!!!</p>\n<center>\n[btnyellow href=\"http://gogoogle.ml/\" target=\"blank\"]点击预览[/btnyellow]</center>\n!!!\n","prev":{"title":"盘点那些数量繁多的USB接口","link":"posts/usbjk"},"next":{"title":"盘点一下那些我用过的免费CDN","link":"posts/freecdn"},"plink":"https://blog.zr.ci/posts/cwgi/","toc":[{"id":"新建-workers","title":"新建 Workers","index":"1","children":[{"id":"登陆cf之后点击-workers","title":"登陆cf之后点击 Workers","index":"1.1"},{"id":"创建子域名","title":"创建子域名","index":"1.2"},{"id":"点击创建-workers","title":"点击创建 Workers","index":"1.3"}]},{"id":"部署代码","title":"部署代码","index":"2","children":[{"id":"编辑workers","title":"编辑Workers","index":"2.1"}]},{"id":"绑定域名","title":"绑定域名","index":"3","children":[{"id":"添加路由","title":"添加路由","index":"3.1"},{"id":"添加解析","title":"添加解析","index":"3.2"}]},{"id":"预览","title":"预览","index":"4"}],"copyright":{"author":"箴扰","link":"<a href=\"https://blog.zr.ci/posts/cwgi/\" title=\"利用Cloudflare Workers 制作Google镜像站\">https://blog.zr.ci/posts/cwgi/</a>","license":"本博客所有文章除特别声明外，均采用(<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"nofollow\" target=\"_blank\">CC BY-NC-SA 4.0</a>)许可协议，转载请注明来源<a href=\"https://blog.zr.ci\" rel=\"nofollow\" target=\"_blank\">箴扰</a>！"}}